<%- include('../layouts/header') %>

<div class="content-wrapper">
  <!-- Content Header (Page header) -->
  <section class="content-header">
    <h1>
      Dashboard
      <small>Control panel</small>
    </h1>
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
      <li class="breadcrumb-item active">Dashboard</li>
    </ol>
  </section>

  <!-- Main content -->
  <!-- Task Manager -->
  <section class="content">
  <div class="row">
    <div class="col-xl-12 col-12">
      <div class="box" style="box-shadow: 1px 0 10px rgba(0,0,0,0.1);">
        <div class="box-header with-border" style="text-align: center;">
          <h4 class="box-title" style="font-size: xx-large; font-weight: bold;">
            THỐNG KÊ
          </h4>
        </div>
        <div class="panel-body">

          <!-- Tổng User Unique Tham Gia -->
          <div class="form-group row">
            <label class="col-sm-3 col-form-label">Tổng Unique User Tham Gia</label>
            <div class="col-sm-3">
              <input type="date" id="start-date-range-user-unique" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-1">
              <p style="margin-top: 10px; text-align: center; font-weight: bolder;">TO</p>
            </div>
            <div class="col-sm-3">
              <input type="date" id="end-date-range-user-unique" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-2 total-statistical">
              <p id="total-user-unique"><%= total_unique_user %></p>
            </div>
          </div>

          <!-- User Mới Tham Gian Theo Ngày -->
          <div class="form-group row">
            <label class="col-sm-3 col-form-label">Tổng User Mới Tham Gia Theo Ngày</label>
            <div class="col-sm-3">
              <input type="date" id="date-newbie-user" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-6 total-statistical">
              <p id="total-newbie-user"><%= total_newbie_user %></p>
            </div>
          </div>

          <!-- Số Lượt Quay Tạo Ra Theo Ngày -->
          <div class="form-group row">
            <label class="col-sm-3 col-form-label">Tổng Số Lượt Quay Tạo Ra Theo Ngày</label>
            <div class="col-sm-3">
              <input type="date" id="date-turn-created" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-6 total-statistical">
              <p id="total-turn-created"><%= total_turn_created %></p>
            </div>
          </div>

          <!-- Số lượt quay được dùng theo ngày -->
          <div class="form-group row">
            <label class="col-sm-3 col-form-label">Tổng Số lượt quay được dùng theo ngày</label>
            <div class="col-sm-3">
              <input type="date" id="date-turn-used" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-6 total-statistical">
              <p id="total-turn-used"><%= total_turn_used %></p>
            </div>
          </div>

          <!-- Số lượt quay còn tồn theo ngày -->
          <div class="form-group row">
            <label class="col-sm-3 col-form-label">Tổng Số lượt quay còn tồn theo ngày</label>
            <div class="col-sm-3">
              <input type="date" id="date-turn-remain" class="form-control" value="2020-09-12">
            </div>
            <div class="col-sm-6 total-statistical">
              <p id="total-turn-remain"><%= total_turn_remain %></p>
            </div>
          </div>
          
        </div>
        </div>
      </div>
    
  </div>
</section>
  <!-- /.content -->
</div>

<script>

  $(document).ready(() => {

    let date = new Date();
    let strTime = convertDateToStringInputDate(date.getDate(), date.getMonth() + 1, date.getFullYear());

    $('#start-date-range-user-unique').val(strTime);
    $('#end-date-range-user-unique').val(strTime);
    $('#date-newbie-user').val(strTime);
    $('#date-turn-created').val(strTime);
    $('#date-turn-used').val(strTime);
    $('#date-turn-remain').val(strTime);

    getTotalUniqueUserJoinGame();
    getTotalNewbieUser();
    getTotalTurnCreate();
    getTotalTurnUsed();
    getTotalTurnRemain();

  });

  function getTotalUniqueUserJoinGame() {
    $('#start-date-range-user-unique').change(() => {
      $('#loading').css('display', 'block');
      let fromDate  = $('#start-date-range-user-unique').val();
      let toDate    = $('#end-date-range-user-unique').val();
      let tmpDateF  = new Date(fromDate);
      let tmpDateT  = new Date(toDate);

      if (!isNaN(tmpDateF.getTime()) && !isNaN(tmpDateT.getTime()) && tmpDateF.getTime() <= tmpDateT.getTime()) {

        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-unique-user',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          contentType   : 'application/json; charset=utf-8',
          data          : JSON.stringify({
            from_date   : fromDate,
            to_date     : toDate
          })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {
              $('#loading').css('display', 'none');
              
              if (data['error'] === 'unvalid token') {
                window.location.href = env.http + window.location.host + '/api/v1/admin/signin';
                return;
              }

              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-user-unique').text(data['result']);

          })
          .fail(() => {});

      }
      else
        $('#loading').css('display', 'none');

    });

    $('#end-date-range-user-unique').change(() => {
      $('#loading').css('display', 'block');
      let fromDate  = $('#start-date-range-user-unique').val();
      let toDate    = $('#end-date-range-user-unique').val();
      let tmpDateF  = new Date(fromDate);
      let tmpDateT  = new Date(toDate);

      if (!isNaN(tmpDateF.getTime()) && !isNaN(tmpDateT.getTime()) && tmpDateF.getTime() <= tmpDateT.getTime()) {

        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-unique-user',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          data          : JSON.stringify({
            from_date   : fromDate,
            to_date     : toDate
          })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {
              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-user-unique').text(data['result']);

          })
          .fail(() => {});

      }
      else
        $('#loading').css('display', 'none');

    });
  }

  function getTotalNewbieUser() {
    $('#date-newbie-user').change(() => {
      $('#loading').css('display', 'block');
      let dateStr = $('#date-newbie-user').val();
      let tmpDate = new Date(dateStr);

      if (!isNaN(tmpDate.getTime())) {
        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-newbie-user',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          contentType   : 'application/json; charset=utf-8',
          data          : JSON.stringify({ date_str: dateStr })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {

              if (data['error'] === 'unvalid token') {
                window.location.href = env.http + window.location.host + '/api/v1/admin/signin';
                return;
              }

              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-newbie-user').text(data['result']);

          })
          .fail(() => {});
      }
      else
        $('#loading').css('display', 'none');
    });
  }

  function getTotalTurnCreate() {
    $('#date-turn-created').change(() => {
      $('#loading').css('display', 'block');
      let dateStr = $('#date-turn-created').val();
      let tmpDate = new Date(dateStr);

      if (!isNaN(tmpDate.getTime())) {
        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-total-turn-create',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          contentType   : 'application/json; charset=utf-8',
          data          : JSON.stringify({ date_str: dateStr })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {

              if (data['error'] === 'unvalid token') {
                window.location.href = env.http + window.location.host + '/api/v1/admin/signin';
                return;
              }

              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-turn-created').text(data['result']);

          })
          .fail(() => {});
      }
      else
        $('#loading').css('display', 'none');
    });
  }

  function getTotalTurnUsed() {
    $('#date-turn-used').change(() => {
      $('#loading').css('display', 'block');
      let dateStr = $('#date-turn-used').val();
      let tmpDate = new Date(dateStr);

      if (!isNaN(tmpDate.getTime())) {
        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-total-turn-used',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          contentType   : 'application/json; charset=utf-8',
          data          : JSON.stringify({ date_str: dateStr })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {

              if (data['error'] === 'unvalid token') {
                window.location.href = env.http + window.location.host + '/api/v1/admin/signin';
                return;
              }

              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-turn-used').text(data['result']);

          })
          .fail(() => {});
      }
      else
        $('#loading').css('display', 'none');
    });
  }

  function getTotalTurnRemain() {
    $('#date-turn-remain').change(() => {
      $('#loading').css('display', 'block');
      let dateStr = $('#date-turn-remain').val();
      let tmpDate = new Date(dateStr);

      if (!isNaN(tmpDate.getTime())) {
        $.ajax({
          url           : env.http + window.location.host + '/api/v1/admin/dashboard/get-total-turn-remain',
          method        : 'POST',
          headers       : {
            'Authorization'	: `Bearer ${localStorage.getItem('token')}`,
            'Content-Type'	:'application/json'
          },
          contentType   : 'application/json; charset=utf-8',
          data          : JSON.stringify({ date_str: dateStr })
        })
          .done((data) => {

            if (data['status_code'] !== 2000) {

              if (data['error'] === 'unvalid token') {
                window.location.href = env.http + window.location.host + '/api/v1/admin/signin';
                return;
              }

              $('#loading').css('display', 'none');
              alert(data['error']);
              return;
            }
            $('#loading').css('display', 'none');
            $('#total-turn-remain').text(data['result']);

          })
          .fail(() => {});
      }
      else
        $('#loading').css('display', 'none');
    });
  }

  function convertDateToStringInputDate(date, month, year) {
    let str = `${year}-`;
    if (month < 10) str += `0${month}-`;
    else            str += `${month}-`;

    if (date < 10)  str += `0${date}`;
    else            str += `${date}`;

    return str;
  }

</script>

<%- include('../layouts/footer') %>